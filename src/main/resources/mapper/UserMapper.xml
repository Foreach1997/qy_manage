<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qy.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.qy.entity.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="dep_id" jdbcType="INTEGER" property="depId" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, user_name, email, password, role_id, phone, dep_id, sex, create_time
  </sql>
  <select id="selectByExample" parameterType="com.qy.entity.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qy.entity.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qy.entity.User" keyProperty="userId"
          keyColumn="user_id" useGeneratedKeys="true">
    insert into user (user_id, user_name, email, 
      password, role_id, phone, 
      dep_id, sex, create_time
      )
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{depId,jdbcType=INTEGER}, #{sex,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qy.entity.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="depId != null">
        dep_id,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="depId != null">
        #{depId,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qy.entity.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.depId != null">
        dep_id = #{record.depId,jdbcType=INTEGER},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_id = #{record.userId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      dep_id = #{record.depId,jdbcType=INTEGER},
      sex = #{record.sex,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="depId != null">
        dep_id = #{depId,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      dep_id = #{depId,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
 <!--   <sql id="insertUserSql">
        user_name,email,password,role_id,phone,dep_id,sex,create_time
    </sql>

    <sql id="userSql">
        user_id,user_name,email,password,role_id,phone,dep_id,sex,create_time
    </sql>

    &lt;!&ndash;查询user &ndash;&gt;
    <select id="findUser" parameterType="com.qy.entity.User" resultType="com.qy.entity.User">
        SELECT * FROM  user
        <where>
            <if test="userId != '' and userId != null">
                user_id = #{userId}
            </if>
            <if test="email != '' and email != null">
                email = #{email}
            </if>
            <if test="password != '' and password != null">
                password = #{password}
            </if>
            <if test="roleId != '' and roleId != null">
                role_id = #{roleId}
            </if>
            <if test="phone != '' and phone != null">
                phone = #{phone}
            </if>
            <if test="depId != '' and depId != null">
                dep_id = #{depId}
            </if>
            <if test="sex != '' and sex != null">
                sex = #{sex}
            </if>
        </where>
    </select>

    &lt;!&ndash;查询user集合 &ndash;&gt;
    <select id="findUserList" parameterType="com.qy.entity.User" resultType="com.qy.entity.User">
        SELECT * FROM  user
        <where>
            <if test="userId != '' and userId != null">
                user_id = #{userId}
            </if>
            <if test="email != '' and email != null">
                email = #{email}
            </if>
            <if test="password != '' and password != null">
                password = #{password}
            </if>
            <if test="roleId != '' and roleId != null">
                role_id = #{roleId}
            </if>
            <if test="phone != '' and phone != null">
                phone = #{phone}
            </if>
            <if test="depId != '' and depId != null">
                dep_id = #{depId}
            </if>
            <if test="sex != '' and sex != null">
                sex = #{sex}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    &lt;!&ndash; 通用用户更新&ndash;&gt;
    <update id="updateUser" parameterType="com.qy.entity.User">
      update  user
      <trim prefix="set" prefixOverrides=",">
          <if test="email != '' and email != null">
              email = #{email}
          </if>
          <if test="password != '' and password != null">
              password = #{password}
          </if>
          <if test="roleId != '' and roleId != null">
              role_id = #{roleId}
          </if>
          <if test="phone != '' and phone != null">
              phone = #{phone}
          </if>
          <if test="depId != '' and depId != null">
              dep_id = #{depId}
          </if>
          <if test="sex != '' and sex != null">
              sex = #{sex}
          </if>
      </trim>
      <where>
          <if test="userId != '' and userId != null">
              user_id = #{userId}
          </if>
      </where>
    </update>

    &lt;!&ndash;通用删除&ndash;&gt;
    <delete id="delUser" parameterType="com.qy.entity.User">
      DELETE  FROM  user  WHERE
        <if test="userId != '' and userId != null">
            user_id = #{userId}
        </if>
        <if test="email != '' and email != null">
            email = #{email}
        </if>
        <if test="password != '' and password != null">
            password = #{password}
        </if>
        <if test="roleId != '' and roleId != null">
            role_id = #{roleId}
        </if>
        <if test="phone != '' and phone != null">
            phone = #{phone}
        </if>
        <if test="depId != '' and depId != null">
            dep_id = #{depId}
        </if>
        <if test="sex != '' and sex != null">
            sex = #{sex}
        </if>
    </delete>-->

</mapper>