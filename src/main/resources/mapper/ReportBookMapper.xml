<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qy.dao.ReportBookMapper">
  <resultMap id="BaseResultMap" type="com.qy.entity.ReportBook">
    <id column="report_book_id" jdbcType="INTEGER" property="reportBookId" />
    <result column="report_book_file" jdbcType="VARCHAR" property="reportBookFile" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="pro_source" jdbcType="VARCHAR" property="proSource" />
    <result column="pro_background" jdbcType="VARCHAR" property="proBackground" />
    <result column="pro_describe" jdbcType="VARCHAR" property="proDescribe" />
    <result column="pro_feasibility" jdbcType="VARCHAR" property="proFeasibility" />
    <result column="pro_money" jdbcType="REAL" property="proMoney" />
    <result column="pro_benefit" jdbcType="VARCHAR" property="proBenefit" />
    <result column="pro_risk" jdbcType="VARCHAR" property="proRisk" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pro_code" jdbcType="VARCHAR" property="proCode" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    report_book_id, report_book_file, status, user_id, pro_source, pro_background, pro_describe, 
    pro_feasibility, pro_money, pro_benefit, pro_risk, create_time, pro_code, reason
  </sql>
  <select id="selectByExample" parameterType="com.qy.entity.ReportBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from report_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from report_book
    where report_book_id = #{reportBookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from report_book
    where report_book_id = #{reportBookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qy.entity.ReportBookExample">
    delete from report_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qy.entity.ReportBook">
    insert into report_book (report_book_id, report_book_file, status, 
      user_id, pro_source, pro_background, 
      pro_describe, pro_feasibility, pro_money, 
      pro_benefit, pro_risk, create_time, 
      pro_code, reason)
    values (#{reportBookId,jdbcType=INTEGER}, #{reportBookFile,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{userId,jdbcType=INTEGER}, #{proSource,jdbcType=VARCHAR}, #{proBackground,jdbcType=VARCHAR}, 
      #{proDescribe,jdbcType=VARCHAR}, #{proFeasibility,jdbcType=VARCHAR}, #{proMoney,jdbcType=REAL}, 
      #{proBenefit,jdbcType=VARCHAR}, #{proRisk,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{proCode,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qy.entity.ReportBook">
    insert into report_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reportBookId != null">
        report_book_id,
      </if>
      <if test="reportBookFile != null">
        report_book_file,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="proSource != null">
        pro_source,
      </if>
      <if test="proBackground != null">
        pro_background,
      </if>
      <if test="proDescribe != null">
        pro_describe,
      </if>
      <if test="proFeasibility != null">
        pro_feasibility,
      </if>
      <if test="proMoney != null">
        pro_money,
      </if>
      <if test="proBenefit != null">
        pro_benefit,
      </if>
      <if test="proRisk != null">
        pro_risk,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="proCode != null">
        pro_code,
      </if>
      <if test="reason != null">
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reportBookId != null">
        #{reportBookId,jdbcType=INTEGER},
      </if>
      <if test="reportBookFile != null">
        #{reportBookFile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="proSource != null">
        #{proSource,jdbcType=VARCHAR},
      </if>
      <if test="proBackground != null">
        #{proBackground,jdbcType=VARCHAR},
      </if>
      <if test="proDescribe != null">
        #{proDescribe,jdbcType=VARCHAR},
      </if>
      <if test="proFeasibility != null">
        #{proFeasibility,jdbcType=VARCHAR},
      </if>
      <if test="proMoney != null">
        #{proMoney,jdbcType=REAL},
      </if>
      <if test="proBenefit != null">
        #{proBenefit,jdbcType=VARCHAR},
      </if>
      <if test="proRisk != null">
        #{proRisk,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proCode != null">
        #{proCode,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qy.entity.ReportBookExample" resultType="java.lang.Long">
    select count(*) from report_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update report_book
    <set>
      <if test="record.reportBookId != null">
        report_book_id = #{record.reportBookId,jdbcType=INTEGER},
      </if>
      <if test="record.reportBookFile != null">
        report_book_file = #{record.reportBookFile,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.proSource != null">
        pro_source = #{record.proSource,jdbcType=VARCHAR},
      </if>
      <if test="record.proBackground != null">
        pro_background = #{record.proBackground,jdbcType=VARCHAR},
      </if>
      <if test="record.proDescribe != null">
        pro_describe = #{record.proDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.proFeasibility != null">
        pro_feasibility = #{record.proFeasibility,jdbcType=VARCHAR},
      </if>
      <if test="record.proMoney != null">
        pro_money = #{record.proMoney,jdbcType=REAL},
      </if>
      <if test="record.proBenefit != null">
        pro_benefit = #{record.proBenefit,jdbcType=VARCHAR},
      </if>
      <if test="record.proRisk != null">
        pro_risk = #{record.proRisk,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.proCode != null">
        pro_code = #{record.proCode,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update report_book
    set report_book_id = #{record.reportBookId,jdbcType=INTEGER},
      report_book_file = #{record.reportBookFile,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      pro_source = #{record.proSource,jdbcType=VARCHAR},
      pro_background = #{record.proBackground,jdbcType=VARCHAR},
      pro_describe = #{record.proDescribe,jdbcType=VARCHAR},
      pro_feasibility = #{record.proFeasibility,jdbcType=VARCHAR},
      pro_money = #{record.proMoney,jdbcType=REAL},
      pro_benefit = #{record.proBenefit,jdbcType=VARCHAR},
      pro_risk = #{record.proRisk,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pro_code = #{record.proCode,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy.entity.ReportBook">
    update report_book
    <set>
      <if test="reportBookFile != null">
        report_book_file = #{reportBookFile,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="proSource != null">
        pro_source = #{proSource,jdbcType=VARCHAR},
      </if>
      <if test="proBackground != null">
        pro_background = #{proBackground,jdbcType=VARCHAR},
      </if>
      <if test="proDescribe != null">
        pro_describe = #{proDescribe,jdbcType=VARCHAR},
      </if>
      <if test="proFeasibility != null">
        pro_feasibility = #{proFeasibility,jdbcType=VARCHAR},
      </if>
      <if test="proMoney != null">
        pro_money = #{proMoney,jdbcType=REAL},
      </if>
      <if test="proBenefit != null">
        pro_benefit = #{proBenefit,jdbcType=VARCHAR},
      </if>
      <if test="proRisk != null">
        pro_risk = #{proRisk,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proCode != null">
        pro_code = #{proCode,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where report_book_id = #{reportBookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy.entity.ReportBook">
    update report_book
    set report_book_file = #{reportBookFile,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      pro_source = #{proSource,jdbcType=VARCHAR},
      pro_background = #{proBackground,jdbcType=VARCHAR},
      pro_describe = #{proDescribe,jdbcType=VARCHAR},
      pro_feasibility = #{proFeasibility,jdbcType=VARCHAR},
      pro_money = #{proMoney,jdbcType=REAL},
      pro_benefit = #{proBenefit,jdbcType=VARCHAR},
      pro_risk = #{proRisk,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pro_code = #{proCode,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR}
    where report_book_id = #{reportBookId,jdbcType=INTEGER}
  </update>
</mapper>