<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qy.dao.PlanBookMapper">
  <resultMap id="BaseResultMap" type="com.qy.entity.PlanBook">
    <id column="plan_book_id" jdbcType="INTEGER" property="planBookId" />
    <result column="plan_target" jdbcType="VARCHAR" property="planTarget" />
    <result column="plan_org" jdbcType="VARCHAR" property="planOrg" />
    <result column="plan_work" jdbcType="VARCHAR" property="planWork" />
    <result column="plan_milepost" jdbcType="VARCHAR" property="planMilepost" />
    <result column="gantt_chart" jdbcType="VARCHAR" property="ganttChart" />
    <result column="plan_relation" jdbcType="VARCHAR" property="planRelation" />
    <result column="risk" jdbcType="VARCHAR" property="risk" />
    <result column="measures" jdbcType="VARCHAR" property="measures" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="report_code" jdbcType="VARCHAR" property="reportCode" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    plan_book_id, plan_target, plan_org, plan_work, plan_milepost, gantt_chart, plan_relation, 
    risk, measures, create_time, user_id, report_code, status
  </sql>
  <select id="selectByExample" parameterType="com.qy.entity.PlanBookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from plan_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from plan_book
    where plan_book_id = #{planBookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from plan_book
    where plan_book_id = #{planBookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qy.entity.PlanBookExample">
    delete from plan_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qy.entity.PlanBook">
    insert into plan_book (plan_book_id, plan_target, plan_org, 
      plan_work, plan_milepost, gantt_chart, 
      plan_relation, risk, measures, 
      create_time, user_id, report_code, 
      status)
    values (#{planBookId,jdbcType=INTEGER}, #{planTarget,jdbcType=VARCHAR}, #{planOrg,jdbcType=VARCHAR}, 
      #{planWork,jdbcType=VARCHAR}, #{planMilepost,jdbcType=VARCHAR}, #{ganttChart,jdbcType=VARCHAR}, 
      #{planRelation,jdbcType=VARCHAR}, #{risk,jdbcType=VARCHAR}, #{measures,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{reportCode,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.qy.entity.PlanBook">
    insert into plan_book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="planBookId != null">
        plan_book_id,
      </if>
      <if test="planTarget != null">
        plan_target,
      </if>
      <if test="planOrg != null">
        plan_org,
      </if>
      <if test="planWork != null">
        plan_work,
      </if>
      <if test="planMilepost != null">
        plan_milepost,
      </if>
      <if test="ganttChart != null">
        gantt_chart,
      </if>
      <if test="planRelation != null">
        plan_relation,
      </if>
      <if test="risk != null">
        risk,
      </if>
      <if test="measures != null">
        measures,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="reportCode != null">
        report_code,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="planBookId != null">
        #{planBookId,jdbcType=INTEGER},
      </if>
      <if test="planTarget != null">
        #{planTarget,jdbcType=VARCHAR},
      </if>
      <if test="planOrg != null">
        #{planOrg,jdbcType=VARCHAR},
      </if>
      <if test="planWork != null">
        #{planWork,jdbcType=VARCHAR},
      </if>
      <if test="planMilepost != null">
        #{planMilepost,jdbcType=VARCHAR},
      </if>
      <if test="ganttChart != null">
        #{ganttChart,jdbcType=VARCHAR},
      </if>
      <if test="planRelation != null">
        #{planRelation,jdbcType=VARCHAR},
      </if>
      <if test="risk != null">
        #{risk,jdbcType=VARCHAR},
      </if>
      <if test="measures != null">
        #{measures,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="reportCode != null">
        #{reportCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qy.entity.PlanBookExample" resultType="java.lang.Long">
    select count(*) from plan_book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update plan_book
    <set>
      <if test="record.planBookId != null">
        plan_book_id = #{record.planBookId,jdbcType=INTEGER},
      </if>
      <if test="record.planTarget != null">
        plan_target = #{record.planTarget,jdbcType=VARCHAR},
      </if>
      <if test="record.planOrg != null">
        plan_org = #{record.planOrg,jdbcType=VARCHAR},
      </if>
      <if test="record.planWork != null">
        plan_work = #{record.planWork,jdbcType=VARCHAR},
      </if>
      <if test="record.planMilepost != null">
        plan_milepost = #{record.planMilepost,jdbcType=VARCHAR},
      </if>
      <if test="record.ganttChart != null">
        gantt_chart = #{record.ganttChart,jdbcType=VARCHAR},
      </if>
      <if test="record.planRelation != null">
        plan_relation = #{record.planRelation,jdbcType=VARCHAR},
      </if>
      <if test="record.risk != null">
        risk = #{record.risk,jdbcType=VARCHAR},
      </if>
      <if test="record.measures != null">
        measures = #{record.measures,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.reportCode != null">
        report_code = #{record.reportCode,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update plan_book
    set plan_book_id = #{record.planBookId,jdbcType=INTEGER},
      plan_target = #{record.planTarget,jdbcType=VARCHAR},
      plan_org = #{record.planOrg,jdbcType=VARCHAR},
      plan_work = #{record.planWork,jdbcType=VARCHAR},
      plan_milepost = #{record.planMilepost,jdbcType=VARCHAR},
      gantt_chart = #{record.ganttChart,jdbcType=VARCHAR},
      plan_relation = #{record.planRelation,jdbcType=VARCHAR},
      risk = #{record.risk,jdbcType=VARCHAR},
      measures = #{record.measures,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      report_code = #{record.reportCode,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qy.entity.PlanBook">
    update plan_book
    <set>
      <if test="planTarget != null">
        plan_target = #{planTarget,jdbcType=VARCHAR},
      </if>
      <if test="planOrg != null">
        plan_org = #{planOrg,jdbcType=VARCHAR},
      </if>
      <if test="planWork != null">
        plan_work = #{planWork,jdbcType=VARCHAR},
      </if>
      <if test="planMilepost != null">
        plan_milepost = #{planMilepost,jdbcType=VARCHAR},
      </if>
      <if test="ganttChart != null">
        gantt_chart = #{ganttChart,jdbcType=VARCHAR},
      </if>
      <if test="planRelation != null">
        plan_relation = #{planRelation,jdbcType=VARCHAR},
      </if>
      <if test="risk != null">
        risk = #{risk,jdbcType=VARCHAR},
      </if>
      <if test="measures != null">
        measures = #{measures,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="reportCode != null">
        report_code = #{reportCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where plan_book_id = #{planBookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qy.entity.PlanBook">
    update plan_book
    set plan_target = #{planTarget,jdbcType=VARCHAR},
      plan_org = #{planOrg,jdbcType=VARCHAR},
      plan_work = #{planWork,jdbcType=VARCHAR},
      plan_milepost = #{planMilepost,jdbcType=VARCHAR},
      gantt_chart = #{ganttChart,jdbcType=VARCHAR},
      plan_relation = #{planRelation,jdbcType=VARCHAR},
      risk = #{risk,jdbcType=VARCHAR},
      measures = #{measures,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      report_code = #{reportCode,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where plan_book_id = #{planBookId,jdbcType=INTEGER}
  </update>
</mapper>